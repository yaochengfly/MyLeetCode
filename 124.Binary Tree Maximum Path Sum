/**
Given a binary tree, find the maximum path sum.

The path may start and end at any node in the tree.

For example:
Given the below binary tree,

       1
      / \
     2   3
Return 6.
**/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int maxPathSum(TreeNode* root) {
        if( !root)
        	return 0;
        caculate(root);
        return max;
    }
    int caculate(TreeNode* root)
    {
        if(root==nullptr)
        	return 0;
        int left=caculate(root->left);
        int right=caculate(root->right);
        int current=std::max(root->val ,std::max(root->val+left,root->val+right));
        max=std::max(max,std::max(current,root->val+left+right));
        return current;
    }
	int max=-65535;    
};