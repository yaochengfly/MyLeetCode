/**
Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [−2,1,−3,4,−1,2,1,−5,4],
the contiguous subarray [4,−1,2,1] has the largest sum = 6.

click to show more practice.
**/
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        int local=nums[0];
        int global=nums[0];
        for(int i=2;i<=nums.size();++i){
            local=std::max(local+nums[i-1],nums[i-1]);
            global=std::max(local,global);
        }
        return global;
    }
};