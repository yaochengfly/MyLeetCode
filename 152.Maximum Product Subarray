/**
Find the contiguous subarray within an array (containing at least one number) which has the largest product.

For example, given the array [2,3,-2,4],
the contiguous subarray [2,3] has the largest product = 6.
**/
class Solution {
public:
    int maxProduct(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        int max_local=nums[0];
        int min_local=nums[0];
        int global=nums[0];
        for(int i=2;i<=nums.size();++i){
            int max_tmp=max_local;
            max_local=std::max(std::max(max_local*nums[i-1],nums[i-1]),min_local*nums[i-1]);
            min_local=std::min(std::min(min_local*nums[i-1],nums[i-1]),max_tmp*nums[i-1]);
            global=std::max(global,max_local);
        }
        return global;
        
    }
};